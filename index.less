@import 'syntax-variables';

.editor-colors {
  background-color: @syntax-background-color;
  color: @syntax-text-color;
}

.editor {
  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .gutter {
    background-color: @syntax-gutter-background-color;

    // TODO huh? how does this work?
    .cursor-line {
      background-color: @syntax-gutter-background-color-selected;
    }
  }

  .line-number.cursor-line-no-selection {
    background-color: @syntax-gutter-background-color-selected;
  }

  .invisible {
    color: darken(@syntax-comment-color, 50%);
  }

  .cursor {
    border-color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
    //border: 1px solid lighten(@syntax-selection-color, 0%);
  }

  .search-results .marker .region {
    background-color: transparent;
    border: 1px solid @syntax-result-marker-color;
  }

  .search-results .marker.current-result .region {
    border: 1px solid @syntax-result-marker-color-selected;
  }

  .gfm {
    .markup {
      &.heading {
        color: @syntax-markup-decoration-color;
        font-weight: bold;
      }

      &.underline {
        color: @syntax-markup-decoration-color;
        text-decoration: underline;
      }

      &.quote {
          color: darken(@syntax-markup-decoration-color, 20%);
      }
    }

    .bold {
      font-weight: bold;
    }

    .italic {
      font-style: italic;
    }

    // TODO what's this?
    .raw {
      color: #66D9EF;
    }

    .variable.list {
      color: #F92672;
      font-weight: bold;
    }

    .link {
      color: @syntax-markup-link-color;

      .entity {
        color: desaturate(@syntax-markup-link-color, 50%);
      }
    }
  }
}

.comment {
  color: @syntax-comment-color;
  font-style: italic;
}

.string {
  color: @syntax-string-color;
}

.string.regexp {
    color: lighten(@syntax-string-color, 30%);
}

.string.quoted.other.lt-gt.include {
    color: @syntax-string-color;
}

.constant.numeric {
  color: @syntax-number-color;
}

.constant.numeric.float {
  color: @syntax-float-color;
}

.constant.language {
  color: desaturate(@syntax-keyword-color, 10%);
}

.constant.character .constant.other {
  color: desaturate(darken(@syntax-number-color, 30%), 25%);
}

.constant.character.escape {
    //color: desaturate(darken(@syntax-escaped-color, 30%), 15%);
    background-color: lighten(@syntax-background-color, 5%);
    //border: 1px lighten(@syntax-background-color, 50%);
}

.keyword {
  color: @syntax-keyword-color;
}

.storage {
  color: desaturate(darken(@syntax-keyword-color, 0%), 27%);
}

.storage.type {
  font-style: italic;
  color: desaturate(darken(@syntax-keyword-color, 6%), 20%);
}

.storage.type.class.todo {
    font-style: italic;
    color: @syntax-cursor-color;
}

.entity.name.class {
  text-decoration: underline;
  color: @syntax-class-color;
}

.entity.other.inherited-class {
  font-style: italic;
  text-decoration: underline;
  color: @syntax-class-color;
}

.entity.name.function {
  color: lighten(@syntax-function-color, 20%);
}

.entity.name.function.preprocessor {

}

.entity.name.instance {
  color: desaturate(@syntax-function-color, 30%);
}

.entity.name.tag {
  color: darken(@syntax-keyword-color, 20%);
}

.entity.other.attribute-name {
  color: @syntax-variable-color;
  //color: @tron-orange-glow
}

.support.function {
  color: spin(lighten(@syntax-function-color, 20%), -12);
}

.support.constant {
  color: spin(lighten(desaturate(@syntax-string-color, 10%), 5%), -12);
}

.support.type,
.support.class {
  font-style: italic;
  color: desaturate(darken(@syntax-variable-color, 12%), 10%);
}

.variable {
  color: desaturate(@syntax-variable-color, 60%);
}

.variable.language {
    color: desaturate(@syntax-variable-color, 30%);
}

.variable.parameter {
  font-style: italic;
  color: saturate(@syntax-variable-color, 20%);
}

.variable.parameter.function {
    font-style: italic;
    color: saturate(@syntax-function-color, 20%);
}

//.meta.function-call {
.support.function {
    color: saturate(@syntax-function-color, 20%);
}

.meta.function-call.arguments {
    //font-style: italic;
    color: saturate(@syntax-variable-color, 20%);
}

.meta.preprocessor {
    color: lighten(@syntax-comment-color, 20%);
}

.punctuation.separator {
    color: @syntax-text-color;
}

.punctuation.definition {
    color: @syntax-text-color;
}

.punctuation.definition.arguments {
    color: @syntax-text-color;
}

.punctuation.definition.tuple,
.punctuation.definition.dictionary,
.punctuation.definition.list {
    color: @syntax-variable-color;
}

.punctuation.definition.string {
    color: @syntax-string-color;
}

.punctuation.definition.comment {
    color: @syntax-comment-color;
}

.punctuation.section {
    color: @syntax-text-color;
}

.invalid {
  color: @tron-metal;
  background-color: @tron-red-glow;
}

.invalid.deprecated {
  color: @tron-metal;
  background-color: desaturate(@tron-red-glow, 20%);
}

// Jade syntax
.class.jade {
  color: #AE81FF;
}
